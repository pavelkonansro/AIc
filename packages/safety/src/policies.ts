// Временные типы (позже перенесем в common)
type AgeGroup = 'child' | 'teen' | 'young_adult';

// Основная политика безопасности для ИИ-компаньона
export const SYSTEM_POLICY = `
Ты AIc, дружелюбный AI-компаньон в виде сенбернара для подростков 9-18 лет.

ОСНОВНЫЕ ПРИНЦИПЫ:
- Будь эмпатичным, понимающим и поддерживающим
- Никогда не давай медицинских диагнозов или советов по лечению
- Не рекомендуй конкретные лекарства или медицинские процедуры
- Используй методы активного слушания и техники эмоциональной поддержки
- Поощряй здоровые способы совладания со стрессом

КРИЗИСНЫЕ СИТУАЦИИ:
- При упоминании самоповреждения, суицидальных мыслей или намерений:
  * Проявляй глубокую эмпатию ("Мне очень жаль, что тебе так тяжело")
  * Подчеркивай важность обращения к взрослому или специалисту
  * Предоставляй контакты местных служб помощи
  * НИКОГДА не нормализуй самоповреждение
  * Всегда подчеркивай ценность жизни человека

НЕПРИЕМЛЕМЫЙ КОНТЕНТ:
- Избегай обсуждения контента 18+
- При попытках обсуждения неподходящих тем деликатно перенаправляй беседу
- Не предоставляй советы по обходу родительского контроля
- Не поощряй рискованное поведение

ПОЗИТИВНАЯ ПОДДЕРЖКА:
- Предлагай здоровые стратегии решения проблем
- Поощряй общение с доверенными взрослыми
- Подчеркивай сильные стороны подростка
- Помогай развивать эмоциональный интеллект
`;

// Шаблоны ответов для кризисных ситуаций
export const CRISIS_RESPONSE_TEMPLATES = {
  suicide: {
    immediate: `Мне очень жаль, что тебе сейчас так тяжело. Твои чувства важны, и ты не одинок в этом. 
Пожалуйста, немедленно обратись к взрослому, которому доверяешь, или свяжись со службой экстренной помощи. 
В разделе SOS ты найдешь контакты служб, которые могут помочь прямо сейчас.`,
    
    followUp: `Помни: каждая проблема имеет решение, даже если сейчас это кажется невозможным. 
Есть люди, которые хотят и могут тебе помочь. Твоя жизнь ценна и важна.`,
  },

  selfHarm: {
    immediate: `Я понимаю, что тебе больно, и ты ищешь способ справиться с этой болью. 
Самоповреждение не решает проблемы, но усугубляет их. Давай найдем более здоровые способы выразить твои чувства.`,
    
    alternatives: `Вместо этого попробуй:
- Интенсивные физические упражнения
- Рисование или письмо о своих чувствах
- Холодный душ или лед на кожу
- Поговорить с кем-то, кому доверяешь`,
  },

  abuse: {
    immediate: `То, что с тобой происходит, неправильно, и это не твоя вина. 
Ты заслуживаешь безопасности и заботы. Очень важно рассказать об этом взрослому, которому ты доверяешь.`,
    
    support: `Если трудно говорить лично, можешь:
- Написать письмо учителю или школьному психологу
- Обратиться в службу поддержки детей
- Поговорить с родственником, которому доверяешь`,
  },
};

// Ключевые слова для детекции кризисов
export const CRISIS_KEYWORDS = {
  suicide: [
    'хочу умереть', 'покончить с собой', 'суицид', 'самоубийство',
    'не хочу жить', 'убить себя', 'лучше бы не родился',
    'план самоубийства', 'способы умереть', 'таблетки для смерти'
  ],
  
  selfHarm: [
    'порезать себя', 'резать руки', 'причинить боль себе',
    'бить себя', 'царапать кожу', 'жечь кожу',
    'самоповреждение', 'селфхарм'
  ],
  
  abuse: [
    'бьет меня', 'причиняет боль', 'трогает меня',
    'заставляет делать', 'угрожает мне', 'насилие',
    'боюсь домой идти', 'родители бьют'
  ],
  
  depression: [
    'ничего не хочется', 'все бессмысленно', 'никому не нужен',
    'безнадежность', 'темные мысли', 'не вижу смысла',
    'все плохо', 'депрессия', 'печаль поглощает'
  ],

  anxiety: [
    'панические атаки', 'не могу дышать', 'сердце бьется',
    'страх умереть', 'боюсь выходить', 'тревога',
    'постоянный страх', 'нервы на пределе'
  ],
};

// Правила модерации контента по возрастным группам
export const AGE_APPROPRIATE_GUIDELINES: Record<AgeGroup, {
  allowedTopics: string[];
  restrictedTopics: string[];
  specialConsiderations: string[];
}> = {
  child: {
    allowedTopics: [
      'школьные проблемы', 'дружба', 'семейные конфликты',
      'эмоции и чувства', 'хобби и интересы', 'страхи',
      'учеба и домашние задания', 'спорт и игры'
    ],
    restrictedTopics: [
      'романтические отношения', 'сексуальность',
      'употребление веществ', 'серьезные психические расстройства',
      'финансовые проблемы', 'политика'
    ],
    specialConsiderations: [
      'использовать простой язык',
      'больше визуальных метафор',
      'чаще привлекать родителей/опекунов',
      'фокус на немедленной безопасности'
    ]
  },

  teen: {
    allowedTopics: [
      'идентичность и самооценка', 'школьный стресс',
      'дружба и конфликты', 'семейные отношения',
      'первые романтические чувства', 'буллинг',
      'изменения в теле', 'планы на будущее'
    ],
    restrictedTopics: [
      'детальная сексуальная информация',
      'употребление наркотиков', 'экстремальные диеты',
      'финансовые вопросы', 'политические дебаты'
    ],
    specialConsiderations: [
      'валидация эмоциональных переживаний',
      'обучение навыкам совладания',
      'поощрение независимости с поддержкой',
      'внимание к социальному давлению'
    ]
  },

  young_adult: {
    allowedTopics: [
      'отношения и романтика', 'планирование карьеры',
      'колледж и будущее', 'идентичность и ценности',
      'семейные конфликты', 'финансовая грамотность',
      'психическое здоровье', 'социальные проблемы'
    ],
    restrictedTopics: [
      'незаконная деятельность', 'экстремистские идеологии',
      'подробности о способах самоповреждения',
      'конкретные медицинские диагнозы'
    ],
    specialConsiderations: [
      'уважение к развивающейся независимости',
      'подготовка к взрослой жизни',
      'обсуждение долгосрочных последствий',
      'поддержка принятия решений'
    ]
  }
};

// Функции для проверки безопасности контента
export class SafetyChecker {
  static detectCrisis(text: string): {
    isCrisis: boolean;
    type?: keyof typeof CRISIS_KEYWORDS;
    confidence: number;
    keywords: string[];
  } {
    const lowerText = text.toLowerCase();
    let maxConfidence = 0;
    let detectedType: keyof typeof CRISIS_KEYWORDS | undefined;
    let allKeywords: string[] = [];

    for (const [type, keywords] of Object.entries(CRISIS_KEYWORDS)) {
      const foundKeywords = keywords.filter(keyword => 
        lowerText.includes(keyword.toLowerCase())
      );
      
      if (foundKeywords.length > 0) {
        const confidence = Math.min(foundKeywords.length * 0.3, 1);
        if (confidence > maxConfidence) {
          maxConfidence = confidence;
          detectedType = type as keyof typeof CRISIS_KEYWORDS;
        }
        allKeywords.push(...foundKeywords);
      }
    }

    return {
      isCrisis: maxConfidence > 0.3,
      type: detectedType,
      confidence: maxConfidence,
      keywords: allKeywords,
    };
  }

  static isAgeAppropriate(content: string, ageGroup: AgeGroup): {
    isAppropriate: boolean;
    violations: string[];
    recommendations: string[];
  } {
    const guidelines = AGE_APPROPRIATE_GUIDELINES[ageGroup];
    const lowerContent = content.toLowerCase();
    const violations: string[] = [];
    const recommendations: string[] = [];

    // Проверяем на запрещенные темы
    guidelines.restrictedTopics.forEach(topic => {
      if (lowerContent.includes(topic.toLowerCase())) {
        violations.push(`Обнаружена неподходящая для возраста тема: ${topic}`);
        recommendations.push(`Перенаправить разговор на разрешенные темы для группы ${ageGroup}`);
      }
    });

    return {
      isAppropriate: violations.length === 0,
      violations,
      recommendations: violations.length > 0 ? recommendations : guidelines.specialConsiderations,
    };
  }
}
