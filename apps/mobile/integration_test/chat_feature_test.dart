import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:patrol_finders/patrol_finders.dart';
import 'package:aic_mobile/main.dart' as app;

void main() {
  group('Chat Feature Tests', () {
    patrolTest('Chat UI components are present', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ UI —ç–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å –æ–±–ª–∞—Å—Ç—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
      expect($(ListView), findsOneWidget);  // Chat messages container
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      expect($('–ü—Ä–∏–≤–µ—Ç! –Ø AIc - —Ç–≤–æ–π AI-–∫–æ–º–ø–∞–Ω—å–æ–Ω. –ö–∞–∫ –¥–µ–ª–∞? üòä'), findsOneWidget);
    });

    patrolTest('Send message functionality', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      const testMessage = '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ';
      
      // –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
      await $.enterText($(TextField), testMessage);
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ç–µ–∫—Å—Ç –ø–æ—è–≤–∏–ª—Å—è –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
      expect($(testMessage), findsOneWidget);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ —á–∞—Ç–µ
      expect($(testMessage), findsOneWidget);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—á–∏—Å—Ç–∏–ª–æ—Å—å
      final textField = $.tester.widget<TextField>($(TextField));
      expect(textField.controller?.text, isEmpty);
    });

    patrolTest('Multiple messages conversation', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      final messages = [
        '–ü—Ä–∏–≤–µ—Ç!',
        '–ö–∞–∫ –¥–µ–ª–∞?',
        '–†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ',
        '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!'
      ];
      
      for (final message in messages) {
        await $.enterText($(TextField), message);
        await $.tap($(FloatingActionButton));
        await $.pumpAndSettle();
        
        // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        await $.pump(const Duration(milliseconds: 500));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å
        expect($(message), findsOneWidget);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∏–¥–Ω—ã
      for (final message in messages) {
        expect($(message), findsOneWidget);
      }
      
      // –ñ–¥–µ–º –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç AI
      await $.pump(const Duration(seconds: 2));
      await $.pumpAndSettle();
      
      // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ + –Ω–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
      expect($(Text), findsAtLeast(5));
    });

    patrolTest('Chat handles empty messages', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–±–µ–ª–æ–≤
      await $.enterText($(TextField), '   ');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –∫—Ä–∞—à–∏—Ç—å—Å—è
      expect($(TextField), findsOneWidget);
      expect($('–ü—Ä–∏–≤–µ—Ç! –Ø AIc - —Ç–≤–æ–π AI-–∫–æ–º–ø–∞–Ω—å–æ–Ω. –ö–∞–∫ –¥–µ–ª–∞? üòä'), findsOneWidget);
    });

    patrolTest('Chat handles long messages', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      const longMessage = '–≠—Ç–æ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —á–∞—Ç–µ. '
          '–û–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏ –º–æ–∂–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫. '
          '–í–∞–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–∞–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è '
          '–∏ –Ω–µ –ª–æ–º–∞–µ—Ç—Å—è –ø—Ä–∏ –∏—Ö –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏. –¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ '
          '—ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –æ—Å—Ç–∞—é—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏.';
      
      await $.enterText($(TextField), longMessage);
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–æ—Å—å
      expect($(longMessage), findsOneWidget);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–µ —Å–ª–æ–º–∞–ª—Å—è
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
    });

    patrolTest('Chat scroll functionality', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π —á—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å —ç–∫—Ä–∞–Ω
      for (int i = 1; i <= 10; i++) {
        await $.enterText($(TextField), '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–æ–º–µ—Ä $i');
        await $.tap($(FloatingActionButton));
        await $.pumpAndSettle();
        await $.pump(const Duration(milliseconds: 200));
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º —Å–∫—Ä–æ–ª–ª–∏—Ç—å —á–∞—Ç
      final listView = $(ListView);
      expect(listView, findsOneWidget);
      
      // –ü—Ä–æ–±—É–µ–º —Å–∫—Ä–æ–ª–ª –≤–≤–µ—Ä—Ö
      await $.drag(listView, const Offset(0, 200));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–±—É–µ–º —Å–∫—Ä–æ–ª–ª –≤–Ω–∏–∑
      await $.drag(listView, const Offset(0, -200));
      await $.pumpAndSettle();
      
      // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
    });

    patrolTest('Chat response time handling', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.enterText($(TextField), '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ä–∞–∑—É –ø–æ—è–≤–∏–ª–æ—Å—å
      expect($('–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?'), findsOneWidget);
      
      // –ñ–¥–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI (–µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è)
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∑—ã–≤—á–∏–≤—ã–º –≤–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
      
      // –ú–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–∫–∞ –∂–¥–µ–º –æ—Ç–≤–µ—Ç
      await $.enterText($(TextField), '–ï—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      expect($('–ï—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ'), findsOneWidget);
    });

    patrolTest('Chat navigation and back button', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      await $.enterText($(TextField), '–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥
      await $.tap($(Icons.arrow_back));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
      expect($('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
      expect($('–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è'), findsOneWidget);
      
      // –°–Ω–æ–≤–∞ –∑–∞—Ö–æ–¥–∏–º –≤ —á–∞—Ç
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —á–∞—Ç–∞
      expect($(TextField), findsOneWidget);
      expect($('–ü—Ä–∏–≤–µ—Ç! –Ø AIc - —Ç–≤–æ–π AI-–∫–æ–º–ø–∞–Ω—å–æ–Ω. –ö–∞–∫ –¥–µ–ª–∞? üòä'), findsOneWidget);
    });

    patrolTest('Chat keyboard interaction', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –¢–∞–ø–∞–µ–º –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞
      await $.tap($(TextField));
      await $.pumpAndSettle();
      
      // –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –ø–æ —Å–∏–º–≤–æ–ª–∞–º (–∏–º–∏—Ç–∞—Ü–∏—è –ø–µ—á–∞—Ç–∏)
      const message = '–ü—Ä–∏–≤–µ—Ç';
      for (int i = 0; i < message.length; i++) {
        await $.enterText($(TextField), message.substring(0, i + 1));
        await $.pump(const Duration(milliseconds: 100));
      }
      
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      expect($(message), findsOneWidget);
    });

    patrolTest('Chat special characters and emojis', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      final specialMessages = [
        '–ü—Ä–∏–≤–µ—Ç! üòäüéâüíù',
        '–ö–∞–∫ –¥–µ–ª–∞? ¬ø¬°¬ß¬±',
        '–¢–µ—Å—Ç 123 !@#\$%^&*()',
        '–†—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç —Å —ë—ä—å—ã—ç—é',
        'Mixed text with √©mojis üöÄüåü'
      ];
      
      for (final message in specialMessages) {
        await $.enterText($(TextField), message);
        await $.tap($(FloatingActionButton));
        await $.pumpAndSettle();
        await $.pump(const Duration(milliseconds: 300));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–æ—Å—å
        expect($(message), findsOneWidget);
      }
      
      // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
    });
  });
}