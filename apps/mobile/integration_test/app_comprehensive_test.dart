import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:patrol_finders/patrol_finders.dart';
import 'package:aic_mobile/main.dart' as app;

void main() {
  group('AIc App Comprehensive Tests', () {
    patrolTest('App startup and navigation flow', (PatrolIntegrationTester $) async {
      // 1. –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      await $.pumpWidgetAndSettle(app.AicApp());
      
      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º splash screen / loading
      expect($('AIc'), findsOneWidget);
      expect($('AI companion for teens'), findsOneWidget);
      expect($('–ó–∞–≥—Ä—É–∑–∫–∞...'), findsOneWidget);
      
      // –ñ–¥–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (2 —Å–µ–∫—É–Ω–¥—ã + margin)
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ø–∞–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
      expect($('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
      expect($('–ü—Ä–∏–≤–µ—Ç! üëã'), findsOneWidget);
      expect($('–ö–∞–∫ –¥–µ–ª–∞ —Å–µ–≥–æ–¥–Ω—è?'), findsOneWidget);
    });

    patrolTest('Home screen components render correctly', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –±–ª–æ–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
      expect($('–¢–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ'), findsOneWidget);
      expect($('–¢–≤–æ—è —Å–µ—Ä–∏—è'), findsOneWidget);
      expect($('–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è'), findsOneWidget);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º mood selector
      expect($('üòÑ'), findsOneWidget);
      expect($('üòä'), findsOneWidget);
      expect($('üòê'), findsOneWidget);
      expect($('üòï'), findsOneWidget);
      expect($('üò¢'), findsOneWidget);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º quick actions
      expect($('–ß–∞—Ç —Å AIc'), findsOneWidget);
      expect($('–ú–µ–¥–∏—Ç–∞—Ü–∏—è'), findsOneWidget);
      expect($('–°–æ–≤–µ—Ç—ã'), findsOneWidget);
      expect($('–ü–æ–¥–¥–µ—Ä–∂–∫–∞'), findsOneWidget);
    });

    patrolTest('Navigation to Chat works', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ø–∞–ª–∏ –≤ —á–∞—Ç
      // –î–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç–∞
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç AIc
      expect($('–ü—Ä–∏–≤–µ—Ç! –Ø AIc - —Ç–≤–æ–π AI-–∫–æ–º–ø–∞–Ω—å–æ–Ω. –ö–∞–∫ –¥–µ–ª–∞? üòä'), findsOneWidget);
    });

    patrolTest('Chat functionality - send and receive messages', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –≤–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç
      final textField = $(TextField);
      expect(textField, findsOneWidget);
      
      // –í–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.enterText(textField, '–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?');
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—è–≤–∏–ª–æ—Å—å
      expect($('–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?'), findsOneWidget);
      
      // –ñ–¥–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –±–æ—Ç–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å async)
      await $.pump(const Duration(seconds: 2));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –æ—Ç–≤–µ—Ç
      // (—Ç–æ—á–Ω—ã–π —Ç–µ–∫—Å—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ mock/real AI)
      expect($(Text), findsAtLeast(3)); // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ + –Ω–∞—à–µ + –æ—Ç–≤–µ—Ç
    });

    patrolTest('Navigation to all main sections', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –ú–µ–¥–∏—Ç–∞—Ü–∏—é
      await $.tap($('–ú–µ–¥–∏—Ç–∞—Ü–∏—è'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–µ—Ä–µ—à–ª–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –º–µ–¥–∏—Ç–∞—Ü–∏–∏)
      // –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ DynamicScreen
      expect($(AppBar), findsOneWidget);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
      await $.tap($(Icons.arrow_back));
      await $.pumpAndSettle();
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –°–æ–≤–µ—Ç—ã
      await $.tap($('–°–æ–≤–µ—Ç—ã'));
      await $.pumpAndSettle();
      expect($(AppBar), findsOneWidget);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
      await $.tap($(Icons.arrow_back));
      await $.pumpAndSettle();
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –≤ –ü–æ–¥–¥–µ—Ä–∂–∫—É
      await $.tap($('–ü–æ–¥–¥–µ—Ä–∂–∫–∞'));
      await $.pumpAndSettle();
      expect($(AppBar), findsOneWidget);
    });

    patrolTest('Mood selector interaction', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä —Ä–∞–∑–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π
      await $.tap($('üòÑ'));
      await $.pumpAndSettle();
      
      await $.tap($('üòä'));  
      await $.pumpAndSettle();
      
      await $.tap($('üòê'));
      await $.pumpAndSettle();
      
      await $.tap($('üòï'));
      await $.pumpAndSettle();
      
      await $.tap($('üò¢'));
      await $.pumpAndSettle();
      
      // –í—Å–µ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∫—Ä–∞—à–µ–π
      expect($(Text), findsAtLeast(1));
    });

    patrolTest('App handles navigation errors gracefully', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –±—ã—Å—Ç—Ä—ã–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞–∂–∞—Ç–∏—è
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.tap($('–ú–µ–¥–∏—Ç–∞—Ü–∏—è'));
      await $.tap($('–°–æ–≤–µ—Ç—ã'));
      await $.pumpAndSettle();
      
      // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –∫—Ä–∞—à–∏—Ç—å—Å—è
      expect($(AppBar), findsOneWidget);
    });

    patrolTest('Deep navigation flow - Chat to Profile to Settings', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ò–¥–µ–º –≤ —á–∞—Ç
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ –≤ —á–∞—Ç–µ –µ—Å—Ç—å –º–µ–Ω—é –∏–ª–∏ —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å
      // –ï—Å–ª–∏ –Ω–µ—Ç - —Ç–µ—Å—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é
      try {
        await $.native.pressHome();
        await $.native.openApp();
        await $.pumpAndSettle();
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Ç–∏–≤–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
      } catch (e) {
        // Fallback –µ—Å–ª–∏ –Ω–∞—Ç–∏–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è
        debugPrint('Native actions not supported, continuing with widget tests');
      }
    });

    patrolTest('Performance and memory test', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      
      // –ë—ã—Å—Ç—Ä–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
      for (int i = 0; i < 5; i++) {
        await $.tap($('–ß–∞—Ç —Å AIc'));
        await $.pumpAndSettle();
        
        await $.tap($(Icons.arrow_back));
        await $.pumpAndSettle();
        
        await $.tap($('–ú–µ–¥–∏—Ç–∞—Ü–∏—è'));
        await $.pumpAndSettle();
        
        await $.tap($(Icons.arrow_back));
        await $.pumpAndSettle();
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ –µ—â–µ –æ—Ç–≤–µ—á–∞–µ—Ç
      expect($('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
    });

    patrolTest('Chat message history persistence', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π
      const messages = ['–ü—Ä–∏–≤–µ—Ç', '–ö–∞–∫ –¥–µ–ª–∞?', '–ß—Ç–æ –¥–µ–ª–∞–µ—à—å?'];
      
      for (final message in messages) {
        await $.enterText($(TextField), message);
        await $.tap($(FloatingActionButton));
        await $.pumpAndSettle();
        await $.pump(const Duration(seconds: 1));
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∏–¥–Ω—ã
      for (final message in messages) {
        expect($(message), findsOneWidget);
      }
      
      // –í—ã—Ö–æ–¥–∏–º –∏–∑ —á–∞—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
      await $.tap($(Icons.arrow_back));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å
      // (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ - –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ)
      expect($(Text), findsAtLeast(2)); // –•–æ—Ç—è –±—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ + —á—Ç–æ-—Ç–æ –µ—â–µ
    });

    patrolTest('Error handling - network failures', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å fallback
      // –≠—Ç–æ –±–æ–ª—å—à–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç, —Ç—Ä–µ–±—É—é—â–∏–π –º–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–∏
      
      // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∫—Ä–∞—à–∏—Ç—Å—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
      expect($('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
      
      // –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å —Å–µ—Ç—å)
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –î–æ–ª–∂–µ–Ω –ª–∏–±–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è —á–∞—Ç, –ª–∏–±–æ –ø–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É, –Ω–æ –Ω–µ –∫—Ä–∞—à–∏—Ç—å—Å—è
      expect($(Scaffold), findsOneWidget);
    });
  });
}