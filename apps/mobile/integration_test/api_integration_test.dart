import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:patrol_finders/patrol_finders.dart';
import 'package:aic_mobile/main.dart' as app;

void main() {
  group('API Integration Tests', () {
    patrolTest('API connection and health check', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API —Ç–µ—Å—Ç–æ–≤, –ø–µ—Ä–µ—Ö–æ–¥–∏–º —Ç—É–¥–∞
      try {
        // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ API —Ç–µ—Å—Ç–∞–º —á–µ—Ä–µ–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–∫—Ä—ã—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –∏–ª–∏ –º–µ–Ω—é
        await $.scrollUntilVisible(finder: $('API Test'), view: $(Scrollable));
        await $.tap($('API Test'));
        await $.pumpAndSettle();
      } catch (e) {
        // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API —Ç–µ—Å—Ç–∞–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å
        debugPrint('API Test page not directly accessible: $e');
      }
      
      // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å –∏ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å API
      expect($('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
    });

    patrolTest('Chat with real API integration', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç OpenRouter API
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –¥–æ–ª–∂–Ω–æ –ø–æ–π—Ç–∏ —á–µ—Ä–µ–∑ API
      const apiTestMessage = '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏.';
      await $.enterText($(TextField), apiTestMessage);
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
      expect($(apiTestMessage), findsOneWidget);
      
      // –ñ–¥–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è)
      await $.pump(const Duration(seconds: 5));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∫–∞–∫–æ–π-—Ç–æ –æ—Ç–≤–µ—Ç
      // –¢–æ—á–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API
      final textWidgets = $.tester.widgetList<Text>($(Text));
      expect(textWidgets.length, greaterThan(2)); // –ë–æ–ª—å—à–µ —á–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ + –Ω–∞—à–µ
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –æ—Å—Ç–∞–ª—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
    });

    patrolTest('API error handling', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –±—ã—Å—Ç—Ä–æ —á—Ç–æ–±—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É API
      for (int i = 0; i < 5; i++) {
        await $.enterText($(TextField), '–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ $i');
        await $.tap($(FloatingActionButton));
        await $.pump(const Duration(milliseconds: 100)); // –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ
      }
      
      await $.pumpAndSettle();
      
      // –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
      await $.pump(const Duration(seconds: 10));
      await $.pumpAndSettle();
      
      // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –∫—Ä–∞—à–∏—Ç—å—Å—è –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö API
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
      
      // –î–æ–ª–∂–Ω—ã –≤–∏–¥–µ—Ç—å —Ö–æ—Ç—è –±—ã –Ω–∞—à–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      expect($('–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ 0'), findsOneWidget);
    });

    patrolTest('Network connectivity handling', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ç–∞—Ä—Ç—É–µ—Ç
      expect($('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.enterText($(TextField), '–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ
      expect($('–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ç–∏'), findsOneWidget);
      
      // –ñ–¥–µ–º –ø–æ–ø—ã—Ç–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –æ—Ç–∑—ã–≤—á–∏–≤—ã–º –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ç–∏
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
    });

    patrolTest('API response time tolerance', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.enterText($(TextField), '–¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ API');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å UI –ø–æ–∫–∞ –∂–¥–µ–º –æ—Ç–≤–µ—Ç
      await $.enterText($(TextField), '–í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç
      final textField = $.tester.widget<TextField>($(TextField));
      expect(textField.controller?.text, '–í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
      await $.pump(const Duration(seconds: 8));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ–±–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∏–¥–Ω—ã
      expect($('–¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç–≤–µ—Ç–∞ API'), findsOneWidget);
      expect($('–í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'), findsOneWidget);
    });

    patrolTest('API configuration and fallback', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ fallback —Ä–µ–∂–∏–º–µ
      // –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      expect($('–ì–ª–∞–≤–Ω–∞—è'), findsOneWidget);
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —á–∞—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –¥–∞–∂–µ –µ—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
      expect($(TextField), findsOneWidget);
      expect($('–ü—Ä–∏–≤–µ—Ç! –Ø AIc - —Ç–≤–æ–π AI-–∫–æ–º–ø–∞–Ω—å–æ–Ω. –ö–∞–∫ –¥–µ–ª–∞? üòä'), findsOneWidget);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      await $.enterText($(TextField), '–†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ fallback?');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      // –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å—Å—è –¥–∞–∂–µ –±–µ–∑ API
      expect($('–†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ fallback?'), findsOneWidget);
      
      // –ñ–¥–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–π fallback –æ—Ç–≤–µ—Ç
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º
      expect($(TextField), findsOneWidget);
      expect($(FloatingActionButton), findsOneWidget);
    });

    patrolTest('Multiple API calls handling', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –°–æ–∑–¥–∞–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å API –≤—ã–∑–æ–≤–æ–≤
      final messages = [
        '–ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å –∫ API',
        '–í—Ç–æ—Ä–æ–π –≤–æ–ø—Ä–æ—Å –∫ API', 
        '–¢—Ä–µ—Ç–∏–π –≤–æ–ø—Ä–æ—Å –∫ API',
        '–ß–µ—Ç–≤–µ—Ä—Ç—ã–π –≤–æ–ø—Ä–æ—Å –∫ API'
      ];
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
      for (final message in messages) {
        await $.enterText($(TextField), message);
        await $.tap($(FloatingActionButton));
        await $.pumpAndSettle();
        
        // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await $.pump(const Duration(seconds: 1));
      }
      
      // –ñ–¥–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö API –∑–∞–ø—Ä–æ—Å–æ–≤
      await $.pump(const Duration(seconds: 12));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –Ω–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∏–¥–Ω—ã
      for (final message in messages) {
        expect($(message), findsOneWidget);
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç—ã (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç –≤–∞—Ä—å–∏—Ä–æ–≤–∞—Ç—å—Å—è)
      final textWidgets = $.tester.widgetList<Text>($(Text));
      expect(textWidgets.length, greaterThan(messages.length + 1)); // –ù–∞—à–∏ + –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ + –æ—Ç–≤–µ—Ç—ã
    });

    patrolTest('API authentication flow', (PatrolIntegrationTester $) async {
      await $.pumpWidgetAndSettle(app.AicApp());
      await $.pump(const Duration(seconds: 3));
      await $.pumpAndSettle();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏—è–º —Ç—Ä–µ–±—É—é—â–∏–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      // –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ - —á–∞—Ç —Å AI
      await $.tap($('–ß–∞—Ç —Å AIc'));
      await $.pumpAndSettle();
      
      // –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å guest —Ä–µ–∂–∏–º
      expect($(TextField), findsOneWidget);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
      await $.enterText($(TextField), '–¢–µ—Å—Ç–∏—Ä—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
      await $.tap($(FloatingActionButton));
      await $.pumpAndSettle();
      
      expect($('–¢–µ—Å—Ç–∏—Ä—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é'), findsOneWidget);
      
      // –ñ–¥–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
      await $.pump(const Duration(seconds: 5));
      await $.pumpAndSettle();
      
      // –î–æ–ª–∂–Ω—ã –ø–æ–ª—É—á–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ –æ—Ç–≤–µ—Ç –∏–ª–∏ fallback
      expect($(Text), findsAtLeast(2));
    });
  });
}