import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/foundation.dart';

class FirebaseConfig {
  static void configureForTesting() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —ç–º—É–ª—è—Ç–æ—Ä Firebase –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (kDebugMode) {
      FirebaseAuth.instance.useAuthEmulator('localhost', 9099);
      print('üî• Using Firebase Auth emulator on localhost:9099');
    } else {
      print('üî• Using real Firebase Auth (no emulator)');
    }
  }
  
  // Fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ —ç–º—É–ª—è—Ç–æ—Ä–∞
  static Future<User?> createTestUser() async {
    if (kDebugMode) {
      try {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ñ–∏–∫—Ç–∏–≤–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        final testCredential = await FirebaseAuth.instance.createUserWithEmailAndPassword(
          email: 'test${DateTime.now().millisecondsSinceEpoch}@example.com',
          password: 'testpassword123',
        );
        
        await testCredential.user?.updateDisplayName('Test User');
        return testCredential.user;
      } catch (e) {
        print('‚ùå Test user creation failed: $e');
        return null;
      }
    }
    return null;
  }
}