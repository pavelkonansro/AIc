import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../services/auth_service.dart';

class AuthDebugPage extends ConsumerStatefulWidget {
  const AuthDebugPage({Key? key}) : super(key: key);

  @override
  ConsumerState<AuthDebugPage> createState() => _AuthDebugPageState();
}

class _AuthDebugPageState extends ConsumerState<AuthDebugPage> {
  final AuthService _authService = AuthService();
  String _debugInfo = '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...';
  String? _currentUser;

  @override
  void initState() {
    super.initState();
    _initializeAndTest();
  }

  Future<void> _initializeAndTest() async {
    try {
      await _authService.initialize();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
      final debugInfo = await _getAuthServiceInfo();
      
      setState(() {
        _debugInfo = debugInfo;
        _currentUser = _authService.currentUser?.uid;
      });
    } catch (e) {
      setState(() {
        _debugInfo = '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: $e';
      });
    }
  }

  Future<String> _getAuthServiceInfo() async {
    final buffer = StringBuffer();
    
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    buffer.writeln('=== AUTH SERVICE DEBUG ===');
    buffer.writeln('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${_authService.currentUser?.uid ?? '–ù–µ—Ç'}');
    buffer.writeln('–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω: ${_authService.isAuthenticated}');
    
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–Ω—è—Ç—å, –∫–∞–∫–æ–π —Å–µ—Ä–≤–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
    try {
      final user = await _authService.signInAnonymously();
      
      if (user?.uid == 'anonymous_user_123') {
        buffer.writeln('üî¥ –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø: MockAuthService');
        buffer.writeln('–ü—Ä–∏—á–∏–Ω–∞: Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      } else if (user?.uid?.startsWith('firebase') == true || user?.uid?.length == 28) {
        buffer.writeln('üü¢ –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø: Firebase Auth');
        buffer.writeln('Firebase UID: ${user?.uid}');
      } else {
        buffer.writeln('üü° –ù–ï–ò–ó–í–ï–°–¢–ù–´–ô –°–ï–†–í–ò–°');
        buffer.writeln('UID: ${user?.uid}');
      }
      
      // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
      buffer.writeln('\n=== –ü–õ–ê–¢–§–û–†–ú–ê ===');
      buffer.writeln('Web: ${Theme.of(context).platform == TargetPlatform.fuchsia}');
      buffer.writeln('iOS: ${Theme.of(context).platform == TargetPlatform.iOS}');
      buffer.writeln('Android: ${Theme.of(context).platform == TargetPlatform.android}');
      
    } catch (e) {
      buffer.writeln('üî¥ –û–®–ò–ë–ö–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò: $e');
    }
    
    return buffer.toString();
  }

  Future<void> _testSignOut() async {
    try {
      await _authService.signOut();
      setState(() {
        _currentUser = null;
      });
      
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω')),
      );
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞: $e')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Auth Service Debug'),
        backgroundColor: Colors.blue,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Card(
              child: Padding(
                padding: const EdgeInsets.all(16.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± Auth Service:',
                      style: TextStyle(
                        fontSize: 18,
                        fontWeight: FontWeight.bold,
                      ),
                    ),
                    const SizedBox(height: 12),
                    Container(
                      width: double.infinity,
                      padding: const EdgeInsets.all(12),
                      decoration: BoxDecoration(
                        color: Colors.grey[100],
                        borderRadius: BorderRadius.circular(8),
                      ),
                      child: Text(
                        _debugInfo,
                        style: const TextStyle(
                          fontFamily: 'monospace',
                          fontSize: 12,
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
            const SizedBox(height: 20),
            Row(
              children: [
                ElevatedButton(
                  onPressed: _initializeAndTest,
                  child: const Text('–û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é'),
                ),
                const SizedBox(width: 12),
                ElevatedButton(
                  onPressed: _currentUser != null ? _testSignOut : null,
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.red,
                    foregroundColor: Colors.white,
                  ),
                  child: const Text('–í—ã–π—Ç–∏'),
                ),
              ],
            ),
            const SizedBox(height: 20),
            const Text(
              '–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:',
              style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            const Text(
              'üü¢ Firebase Auth - —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è\n'
              'üî¥ MockAuthService - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\n'
              'üü° –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ - —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏',
              style: TextStyle(fontSize: 14),
            ),
          ],
        ),
      ),
    );
  }
}