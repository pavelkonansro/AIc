name: API CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/api/**'
      - 'packages/**'
      - '.github/workflows/api.yml'
  pull_request:
    branches: [main]
    paths:
      - 'apps/api/**'
      - 'packages/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ike_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'apps/api/package-lock.json'

      - name: Install dependencies
        run: |
          cd apps/api
          npm ci

      - name: Build packages
        run: |
          cd packages/common && npm install && npm run build
          cd ../safety && npm install && npm run build

      - name: Run Prisma migrations
        run: |
          cd apps/api
          npx prisma migrate deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ike_test

      - name: Run tests
        run: |
          cd apps/api
          npm run test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ike_test
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test

      - name: Run E2E tests
        run: |
          cd apps/api
          npm run test:e2e
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/ike_test
          REDIS_URL: redis://localhost:6379
          NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: 'apps/api/package-lock.json'

      - name: Install dependencies
        run: |
          cd apps/api
          npm ci

      - name: Build application
        run: |
          cd apps/api
          npm run build

      - name: Build Docker image
        run: |
          cd apps/api
          docker build -t ike-api:${{ github.sha }} .

      # TODO: Push to registry, deploy to staging/production

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          cd apps/api
          npm audit --audit-level high

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
